<?xml version="1.0"?>
<project
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.basaki</groupId>
        <artifactId>otel-example</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>otel-server</artifactId>
    <name>server</name>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Data -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.3.4</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${otel.download.url}</url>
                            <unpack>false</unpack>
                            <outputDirectory>${project.build.directory}/otel</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->
<!--                <version>3.1.2</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <artifactItems>-->
<!--                        <artifactItem>-->
<!--                            <groupId>io.opentelemetry.javaagent</groupId>-->
<!--                            <artifactId>opentelemetry-javaagent</artifactId>-->
<!--                            <version>${otel.version}</version>-->
<!--                            <type>jar</type>-->
<!--                            <overWrite>false</overWrite>-->
<!--                            <outputDirectory>${project.build.directory}/otel</outputDirectory>-->
<!--                            <destFileName>opentelemetry-javaagent.jar</destFileName>-->
<!--                        </artifactItem>-->
<!--                        <artifactItem>-->
<!--                            <groupId>io.opentelemetry.javaagent</groupId>-->
<!--                            <artifactId>opentelemetry-javaagent-exporter-jaeger</artifactId>-->
<!--                            <version>${otel.version}</version>-->
<!--                            <type>jar</type>-->
<!--                            <overWrite>false</overWrite>-->
<!--                            <outputDirectory>${project.build.directory}/otel</outputDirectory>-->
<!--                            <destFileName>opentelemetry-javaagent-exporter-jaeger.jar</destFileName>-->
<!--                        </artifactItem>-->
<!--                    </artifactItems>-->
<!--                    <outputDirectory>${project.build.directory}/wars</outputDirectory>-->
<!--                    <overWriteReleases>false</overWriteReleases>-->
<!--                    <overWriteSnapshots>true</overWriteSnapshots>-->
<!--                </configuration>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.basaki.server.ServerApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile.maven.version}</version>
                <configuration>
                    <skip>false</skip>
                    <repository>basaki/otel-server</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <SERVICE_NAME>${project.artifactId}</SERVICE_NAME>
                        <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                    </buildArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>push-image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
  
